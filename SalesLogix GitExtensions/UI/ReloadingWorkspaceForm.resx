<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAANkE3LLaAgAAEWFJREFUaEO9
        WQdYVFe3PTPAMMMAQ68DA4JBFPxRMQZL7AULikgdikCU4qgoaExERWwIiqIo2CVBo8YSe4ziC8ZETSyJ
        STTWWKOmGtPe/96frLfPuTOARAVjXvi+9c1lyj1r7712Oecy9s/8yWgZDvkzwnSff4a1cRUZi2ZmRgOe
        dWEZ68AsjE541ns16/cmr8scJzmGdtmhqOi0RVnRabOysiE6vqGsbIzQjcrK9tUSnt9gU9Fxk2pN61Uq
        AzlD8Tc6pEkjZKw7M+cec55lmbr8Xiw+/m0XTvyyScLPEo6b8BNdP9iEY0a8/+MbOPlgJ7bcm4a+NeZ3
        NLmOPVi0ViWMkOT4//4nFyGnRTUzLEdX383Dyd+24OCDMhz8sRwH75fjnR8I35fjAOHt78qx/1vCN+XY
        83UZar5diyPfv46oQz7XFQb7QSzS253u5fA0BnAJPMufnA1glizaXmM3zdKw9qux2HN/LtZ/nYWqewas
        J6y7a8DaO4TbBqy5ZcDqmwasuJGN9TcnYfOdmRi43+WmPFszksV5tmWxrj78XsY8eCI3k3ZN5Hm4/oox
        cpKQknvNJl8xftXNbOz+YQ7W3s3E+rtjsO7OGKz5inB7DFbfIhjJr705EZtuF2DgXo9b8izbTBbj3YXp
        vVuzaDdno4SeWBRMumWKcTYtWYaDp7Dir1WSegNeVeRUXs/E9u8KsPKrl7DqdobAylsZWHEzA5U3MlBx
        nXAtEzvvLsSg/e7fsgy7bBbt050lev6LDHBnia5qY0491pl1Scde0vj22GlzufObNh+yZKMRUkI+TSQa
        GKDKKf9yFLZ8k4/lt0ai4lY6lt9Mx7IbhOvpKL+WjqVfpmHJ1XTUfrsBY4/1+FU9xXIWeTyYJbjpWISj
        TVMlVKrXXLPx7k5t1ihqd90pw+67ZehQrfqApWhIf/T50xlRb8AUVU7ZlXRsvPcyltxIxNIbKVhynXAt
        BWVXU7CYsOhyChZcSsSqL3Nx4vudSK4N+lmRYz2CJXjbN5DOY3NSWqy7Tuk0W7ag7Its1NyvpCqxBFtv
        zycjlMdZqqaFKF/G0tiM7K4zQE0GlF5KQdWdXJRei8OiL/UovarHQo4reiy4rEfJRT2KL+gx+9wIrL36
        Cg7cXYsub9p9zlJdWjRlgCQd8r7ZWKt+CQfa/1b7QxUtFIvia8Ow/7vF2HxzLtpVkRE8EvVGNCWnegMm
        q3KKLyRRwo7D/CtRKLkSg+LLMZh/KQZFF2Mw7wLhixjMOR9DBsRgxqfDsPlGMZZdnAC3YrPFwgCujsfU
        f2mhYR6OfkuVNZtuFIFXjLmXIzD/aiTmXYnA7m9KsPF6IUKqlMeewoiHDJh3LoFKZBbmXBxKoPtejCJE
        Y9b5YZh1bjgKPx+OmZ8NR8GnwzH9bCSmfzIcu2+tQPw7wT+zDOsuwoBHSFiaL4T3VSNequnxx45781Hw
        RThmX4rAHDJi9qUhmHUpHNvvzUHVtXyEVms+Uox2bNVASo+LxEMGzPosFjyRZ5wPJ69Ho+RCCrhR8y8k
        IP/TQZj+aQSmnY1A/icRmPpxBCafCseiz8dg1cWp0C5UrGfRztYiEo2iIBdvDtXYaYutdq27PJ30mIhp
        5/qTEQNRcCEcMy/w1wEouNgfW+/MwZC9Pv9W5NgMepxHGuRGnQGqPFXOjE9GoPRyEgq/GIKFF1MRVu1y
        u+1qmysl51LJ65GYcmYAppweiJeJ+OST4Zj0UTgmnOiP6stFiNjZ6j4bZduR9W1cSrn3B7tbsVT7rhHb
        2/5SfWMaXj7bE1M/64epn/dD/jkJU8/1xqKrich870WoJ6kKWbS7t2jr0nTYZARUeeqcqaeHouxyGorO
        JyBso/NXLM3pVZbiPLnnFs/vSs+PRt6pPsj9qC8mftiPiPdDzvF+MHzQE0Ufj0LByWRoplkUGg1Q1keB
        64qsUuQqp+efiKewJiH3426YTEZwQ0zIP9cX888nQ7dAfZTFenRmSR7PifLWTAMUE9Q5+aeHY9mlMehU
        bf8VG+UwgcV7R7FY3XBlntWyzCPdMfOTWBiOv4hxx3tSH+gJw/s9kX20B8Ye7Yuln01Cm0q7kyyaehJv
        aFJjpT/+T5yLq3eR7eHF5wzIO9MLOae7YsLpbph4RkLOmc4ouhCHqN0h/2aj7AwsTteOJfEIkCaf3Bck
        CZGh6lybcSm1Iei6wf02G+WYzeK8e7EkbXem9+zBEtyHBlXafzH7kyRkf9ANWUe7IZOQcaQbRtd2Q+p/
        haH4jAFDtgf/wtI1NJHSunWO4/8kObXrvNb3zsJzo5F1oiPGfBgGw0dhGHuS4wWMPx2GwrOx0BVrjrN4
        r67C+82bCuuGOc0U+7yANeyWPMM5mcXrwsR4EOvlR02zFYvRdrTKs1qcVdsLE0+EI622E9LfDUMaEU89
        HIakgx0x+YNoZBzqD8VE1Xg2wMFWOEZIl7foNM2wYVtD/5hJJNPfD0HGsVBkHA9FJiHjeAdMOtMbGe/2
        hEWOdTGL82oj5hKeN3VhfEJz5BIdqrOzMjgNUoxxjhJTZZJboLgHlyBFXwxqaU5xvTf5PXjlwygk1rRD
        ck0okg6FIvFgKBIOdMComp7IPTICdtOsKnm5F7kgqhGNp3KD2pC490XkfdQfyUeCkXY0RAIZk3o0mKpD
        OAZubfPfLN0hRXitae2bLJJKNB+BOVGe+HwkTnR1EdLlxnEHJnr7sniPML9FDqcnH4tEwqF/Ue0PQdzb
        IYjdH4LoffS6rwMmvxcH10Kb/SQhN/E7YQCRMRurnpN2oBcy3w+D/nBrJL4bhKRawpEgJNYGYsqpQWi/
        wvMe07v0pgT2apBETXViab7i4dZT2LnhVK5F9Hju1H1G0YjRBrnMVG8bU9tfkI/a1wbD9wYhck8Qhu3i
        CMa4w5FosdDuA1rfV9xPKIBmbLOx1gtS9ndHyrvtEHMoALE1rRBHiD/ciq5binrcapHrRRbv+rywvk5/
        zZiGuE75QtJe1gTTPC9FiIZHyil/u1fVK9MO9hBej9gVQGiFIW+1wqAdrRC+LQAZBwciYJHTp0zvRnsD
        iqooIJGuLmZjrEvj93RB/CGy9G0/DD/gj6h3JES+44txx/rguVKXS0zv3l7aVIg9aVPer5fRn49UTL+V
        ZjAeFZKXZqq6Ivntbhi+JxgDdrTAgO3+6L/NH/22+qPPlhZI3tcL/guczlIEgkQ0hQHROjdZtnpuxLb2
        iD4QiEG7vTF4rw5D9kkYvE+LrPe6I7jc7R5LcgkTCfR0Bjw5TCI65E2SpuM0q436fWEYuMMffbf6oPcW
        H/TarEOPNwgbdYjb1RUeczTHmN4jQFRBkwFslM2E7lXPIWp/IPq85Y7+uzwFwndr0X+3O5Jq2iNsndf/
        sDSHKGG5NBU2NwJPMsAoLzIg2tXXY4718SFvBaJtlSU6vm6HLhvc0G2DFl2rCa9rEbntedi9YvM2ceDj
        dQMDUpzigpd6/CdyTyC6v+mMXttd0Xu7G3psc0SnLSr02GEnQmgxzmY2L4mPGqialQ1//lJ9lRrp1K31
        Mof7vbfo4LeSwZ/w3Eo5Wq9Wod0ae4RVadFvQxBUueqVLMFH95CEqC539yi0uzX4rQB03mQv0GGjEm2r
        GYIJ7TbKMXhnSzgWqE6JKiSmwr/ltE3q1NSYFOOsZ3R9XYeOr9nDbwWDXyVDiwoGn+UM3kuJx0o7dFjh
        BXmm/STBoa4K8ZpMzUk50epwzzdaoH21Cm3WyxC4nqFNFUPQawyt6bXPdg8EVzj+wV6y0ze1uWhmNKQE
        5iU1waWF22zV+d6b/NFyhZkg3oKI+yxj0BF57WLiUWkPryLbByzZJaLOiVIjIy3x5vSSZm6bZY6kPwWe
        W8MQuJawrh4hr1ui92Yf2ExVfMjiHD2EEU+3P25sV90W1nyc1Yx2q1zRcb0zdETaRNx7CYMXkdcuYmhb
        4QzrKepjJJ0OtLanMFwYIDWYFizRfZj9dKsf2623lfS3irCaIYCDDOLXXd5wQttKR8gMqhK+d5bOfP6S
        lGgPQqWY94BUhz4eRcr7nau84LtMLuTSkLhHKUVhsQX8SjWQZdkVMb1PgOjkdYWEW8I1laALkWep9gcu
        t6XkkQkd+hNakjEmBKySo8tGd3iVWP3ORtuME+Q5ieZHQjowMx3Qpjh10Ew3vxS62h0BFSohFa8yBk96
        9SCveyxkcC2hfFhsDbt81V2mdx3EErX+om/UT6O8O1Jz4rU1yTnbfoblfwJXKkUYuQ65Hv04jEnVaqU5
        Or3mArd5lv8ry1TPNM4krNH2snGJNRHnHVg6lE23H2A7zexqUIUjAius4UmEObjHOXH3BUS+mF5L5NAW
        qyHLtq4Sg6DeU/vwfoB7j8tIDFQ05maoanSlSgqnTCSQrpw0yUEG+XJ90nXLSnNR2rwWKKHItTjERjr0
        NTY3k84bP8io13+ysx/tvYsdC81/bb3cHi3LreDOCRtJu5HHOXGX+QzO80j/JUqop1h8xxLdoiQn/7mR
        SsnEp0VuYaLrSMtJ5j/5LrEQ4fQmeFEycV0Kg4wa9SmnGr1CjZZL1XAoNPvdIsdyLxutSa2bU6TcMG5o
        6GQtzaGfmcGq3Cbf7I73QiUCllkLbbuRpzlpDhci7syJFzE4zqX/58lhX2ABNkpTTiN3e3FCV1/C65wi
        lTMeBbHB0D5P+4NyTYGcKoAcnhRSHlpeCbhGG8N3qTlaLiPJlSloQTNY58t+VL5sdtYsx/I9s/GWRyhC
        J9Svyu44zKJ7lVjAt0wpETd6us7bRJp73ImIO85hcJgt446B3GB5iiV69RV7iEd4v37g4lnNszuBziIT
        abuXYXXIvrBej1yTplBzjTaGdpEM3ovNBLSlZvS5DB4LZPBcSBpeaHxvgbxOHi6cMMHpIdIM9rMkaApk
        kI+Xf82SPVJF6WxijJdmEr5J4GHiP9BrI1m25SnNzPrwulJ43SjMppDzCiFA79WBy4F/x/Qe/Ubo2eRh
        TthI2mE297QETtqO1uLr2RQwyCewn1mK6xSm170gtN+MTRQ3QiG+yEtVEiV0klcsy7I8YzujngAPsyDz
        OPDPjTARNclCkkY9YR5hE2lbIq0hWE8j8jmyn9lIlxlM79VNKELs5sSjJeNJxON6vWmHxDcYfLOdwB8s
        aONJTrWqV6WFTST466PQ0KsmzwpZcLINCHOy3DE20yVYE/gabKzZbeH5BJ8XRVGJ86Ku3+TpR4OEFvM5
        t5Z6AzciiU4h9F4RLN1ujdkE2QMbWpSTeSQo/IIkQcNfuVfpPVsuDbrm0niINHnbOp/BaiqD+SQin6l6
        nyaCdEGee55v/B86QmnelFU/ZJkaXKJ3Z1EJkt3H0yLvmeex33moedgFyKjG4IY29C7/Pier5iDCnDT3
        uMVkIm4wv85SHRezRN0wIi553kS++Uf5D1knGcEjwUsXb3K8Dut1dAjlNZSluExnmVa1ZhNlPylfITKc
        FCdoBL/mRDlJ8VkDwvz7li8zmOUS8TEWl+ikYyU5J1k4iDuKR53vu5vxOKmpeNQ/seFbPj4B8lpsigb3
        Vop7Do0Er7Es5Rl5jvy+RR6DgjyqmEIkjVAQWe5lihpkOexXZrD4ko7K99OZ6Cy6l55msHBxQpfk0U6a
        Bij/TKcWf8OuT5phTAfAfPTmR4ricMvzBVq8J4V9AEVnBBHIZCNdZ1LHraSOvIWNtt5LRA+w0bZbKX/W
        UVWZTw6YSGQTaGQZKHoNzy9OnDdQccBFzVQ8lv1LE+4TA1JvCA8tlxUfquI9W7IEjxD6P0xol5PiUuAE
        E7wHC/DreJ/+4rN48rSobCRHUeWo5/DmyYmLx1vSU/2/ab/9SIPqz3h4mPlYKzxHxpjOOaXq0Z68GyrA
        r03HiaK/iENhN+nBnSiP/wjxxtbUR4SHnBvDuzjPFXHsQiVYDIe8AdE1f48TFlOveEChlI4cjQPfM2j9
        /wAYw4srHDeheQAAAABJRU5ErkJggg==
</value>
  </data>
</root>